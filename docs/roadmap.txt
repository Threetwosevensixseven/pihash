
.PIHASH ROADMAP
===============
Y Port best practice dot command template from zeus to sjasmplus
Y Use template to create a .pihash command
  Dynamically load .pisend (or .pi3) from inside .pihash
  Create a simple python2 program to output MD5 hash for a file
Y Get CSpect UARTReplacement working with Pi as well as ESP UARTs
  Fix intermitted .p3 errors with CSPect UARTReplacement plugin
Y Get a physical Pi working with a USB serial cable for .pihash test purposes
  Use .pisend to dynamically upload py2 program
  Use .pisend to dynamically upload py2 program if not already present and set permissions
  Use .pisend to execute py2 program and return output
  Create a NextPi hash bucket
  Store my Pi command in a bucket
Y Add -md5, -sha1 and filename switches to .pihash
  Use .pisend to (always) upload file from these switches to Pi
  Get .pihash to return results from executed program
  Replace python2 program with C/C++ program
  Dynamically link to libstdc++.so.6.0.22
  Test all failure scenarios
  Extend with other hash and crypto algorithms
  Support control pin commands (exit at least)
  Demonstrate the problems third party NextPi replacements (Vitali Greck) have with this
  End result will remain a standalone dot command that contains the Pi binary and dynamically calls .nextpi
